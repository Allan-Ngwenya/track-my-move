[{"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\index.js":"1","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\reportWebVitals.js":"2","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\App.js":"3","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\StepContext.js":"4","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\Login.js":"5","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\EstateHome.js":"6","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\BuyerHome.js":"7","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\Profile.js":"8","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\ProfileEdit.js":"9","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\Signup.js":"10","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\utils\\auth.js":"11","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\AuthLock\\index.js":"12","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Contact\\index.js":"13","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Header\\index.js":"14","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Footer\\index.js":"15","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\utils\\mutations.js":"16","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\utils\\queries.js":"17","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\MortgageOfferForm.js":"18","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\MortgagePrincipleForm.js":"19","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\LegalSearchForm.js":"20","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\PropertyAcceptedForm.js":"21","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\SurveyForm.js":"22","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\ExchangeCompletionForm.js":"23","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\ViewBuyerCard\\index.js":"24","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\About.js":"25"},{"size":500,"mtime":1651872852730,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1651872852743,"results":"28","hashOfConfig":"27"},{"size":3355,"mtime":1651878468470,"results":"29","hashOfConfig":"27"},{"size":452,"mtime":1651872852698,"results":"30","hashOfConfig":"27"},{"size":2561,"mtime":1651872852735,"results":"31","hashOfConfig":"27"},{"size":1711,"mtime":1651872852734,"results":"32","hashOfConfig":"27"},{"size":5553,"mtime":1651885325283,"results":"33","hashOfConfig":"27"},{"size":2779,"mtime":1651881139657,"results":"34","hashOfConfig":"27"},{"size":4584,"mtime":1651881122955,"results":"35","hashOfConfig":"27"},{"size":3142,"mtime":1651872852739,"results":"36","hashOfConfig":"27"},{"size":1298,"mtime":1651872852794,"results":"37","hashOfConfig":"27"},{"size":293,"mtime":1651872852703,"results":"38","hashOfConfig":"27"},{"size":4231,"mtime":1651872852706,"results":"39","hashOfConfig":"27"},{"size":3076,"mtime":1651879779162,"results":"40","hashOfConfig":"27"},{"size":786,"mtime":1651872852710,"results":"41","hashOfConfig":"27"},{"size":1333,"mtime":1651872852796,"results":"42","hashOfConfig":"27"},{"size":1558,"mtime":1651883536079,"results":"43","hashOfConfig":"27"},{"size":5578,"mtime":1651872852719,"results":"44","hashOfConfig":"27"},{"size":7229,"mtime":1651872852721,"results":"45","hashOfConfig":"27"},{"size":6092,"mtime":1651872852718,"results":"46","hashOfConfig":"27"},{"size":5602,"mtime":1651872852722,"results":"47","hashOfConfig":"27"},{"size":9115,"mtime":1651872852724,"results":"48","hashOfConfig":"27"},{"size":5892,"mtime":1651872852715,"results":"49","hashOfConfig":"27"},{"size":526,"mtime":1651882823163,"results":"50","hashOfConfig":"27"},{"size":945,"mtime":1651880495151,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3og3y7",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\index.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\reportWebVitals.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\App.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\StepContext.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\Login.js",["109"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\EstateHome.js",["110","111","112","113","114"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\BuyerHome.js",["115","116"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\Profile.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\ProfileEdit.js",["117","118","119","120"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\Signup.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\utils\\auth.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\AuthLock\\index.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Contact\\index.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Header\\index.js",["121","122"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Footer\\index.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\utils\\mutations.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\utils\\queries.js",[],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\MortgageOfferForm.js",["123"],"import React, { useContext, useState } from \"react\";\nimport { multiStepContext } from \"../../StepContext\";\nimport axios from \"axios\";\n\nconst SECTION = \"mortgageOfferForm\";\n\nexport default function MortgageOfferForm({ state, onChange, onAddNote }) {\n  const { setStep } = useContext(multiStepContext);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n\n  const handleSave = (e) => {\n    onAddNote(SECTION, \"noteList\", state.note);\n    onChange(SECTION, \"note\", \"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    onChange(SECTION, name, value);\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    onChange(SECTION, name, checked);\n  };\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/uploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const { fileName, filePath } = res.data;\n      onChange(SECTION, \"uploadedFile\",{ fileName, filePath });\n    } catch (err) {\n      if (err.response.status === 5000) {\n        console.log(\"Problem with server\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sheet\">\n      <form>\n        {/* toggle button */}\n        <div className=\"switcher\">\n          <div className=\"switch-button\">\n            <input\n              className=\"switch-button-checkbox\"\n              type=\"checkbox\"\n              checked={\n                state.loanAppoitment &&\n                state.offerReceived &&\n                state.offerAccepted\n              }\n              onChange={(e) => {}}\n            ></input>\n            <label className=\"switch-button-label\">\n              <span className=\"switch-button-label-span\">In Progress</span>\n            </label>\n          </div>\n        </div>\n\n        {/* description */}\n\n        <h2>Mortgage Offer</h2>\n        <div className=\"description\">\n          <p>\n         Once you have had an offer accepted on a property you can finalise your mortgage. Return to either your\n         online account with the lender or contact your mortgage broker and complete the application for the \n         actual mortgage. Be prepared to provide payslips and proof of addresses. If you have been on any kind\n         of leave from employment (e.g. maternity leave) you should be able to provide payslips from before\n         this leave. The actual mortgage application can take anywhere between 2 and 6 weeks depending on circumstances.\n          </p>\n        </div>\n        <div className=\"checkbox\">\n          <ul>\n            <li>\n              <input\n                className=\"item\"\n                name=\"loanAppoitment\"\n                type=\"checkbox\"\n                checked={state.loanAppoitment}\n                onChange={handleCheckboxChange}\n              />\n\n              <span>Loan Appointment </span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"offerReceived\"\n                type=\"checkbox\"\n                checked={state.offerReceived}\n                onChange={handleCheckboxChange}\n              />\n              <span>Offer Received </span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"offerAccepted\"\n                type=\"checkbox\"\n                checked={state.offerAccepted}\n                onChange={handleCheckboxChange}\n              />\n              <span>Offer Accepted </span>\n            </li>\n          </ul>\n\n         \n        </div>\n\n        <div>\n          <button\n            onClick={() => setStep(2)}\n            type=\"button\"\n            className=\" button2 item btn-back\"\n          >\n            Back\n          </button>\n          <button\n            onClick={() => setStep(4)}\n            type=\"button\"\n            className=\" button2 item btn-next\"\n          >\n            Next\n          </button>\n        </div>\n        <div>\n          <label>Leave a note:</label> <br />\n          <textarea\n            value={state.note || \"\"}\n            name=\"note\"\n            className=\"note\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <button type=\"button\" className=\"button1 btn-save\" onClick={handleSave}>\n          Save\n        </button>\n        <div>\n          <h3>User comments:</h3>\n          <ul>\n            {state.noteList.map((note) => (\n              <li>{note}</li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h4>File Upload</h4>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              {filename}\n            </label>\n          </div>\n        </div>\n        <input onClick={handleUpload} value=\"Upload\" className=\"btn btn-primary mt-4\" />\n      </form>\n      {state.uploadedFile ? (\n        <div className=\"row mt-4\">\n         <a href=\"`/client/src/assets/${file.name}`\" target=\"_blank\">\n         <h5\n           name=\"file\"\n          >\n           {state.uploadedFile?.fileName}</h5>\n         </a>\n         \n        </div>\n      ) : null}\n    </div>\n  );\n}\n",["124","125"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\MortgagePrincipleForm.js",["126","127","128","129"],"import React, { useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { multiStepContext } from \"../../StepContext\";\nimport axios from \"axios\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_FORM } from \"../../utils/mutations\";\nimport { QUERY_FORM, QUERY_FORMS } from \"../../utils/queries\";\nimport Auth from \"../../utils/auth\";\n\nconst SECTION = \"mortgagePrincipleForm\";\n\nexport default function MortgagePrincipleForm({ state, onChange, onAddNote }) {\n  const { setStep } = useContext(multiStepContext);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n  const { data: userData } = Auth.getProfile();\n\n  const { userId, formName } = useParams();\n\n  const { loading, myData } = useQuery(QUERY_FORM, {\n    variables: { userId: userId, formName: formName },\n  });\n\n  const form = myData?.form || {};\n\n  console.log(\"form details - \" + JSON.stringify(form));\n\n  // const [uploadedFile, setUploadedFile] = useState({});\n  const [addForm, { error }] = useMutation(ADD_FORM, {\n    update(cache, { data: { addForm } }) {\n      try {\n        const { forms } = cache.readQuery({ query: QUERY_FORMS });\n        console.log(addForm);\n        cache.writeQuery({\n          query: QUERY_FORMS,\n          data: { forms: [addForm, ...forms] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleSave = (e) => {\n    onAddNote(SECTION, \"noteList\", state.note);\n    onChange(SECTION, \"note\", \"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    onChange(SECTION, name, value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const notes = state.noteList.map((noteText) => {\n        return { noteText, noteAuthor: userData.username };\n      }); //[{noteText: state.note, noteAuthor: userData.username}],\n      console.log(notes);\n      console.log(userData);\n      const { data } = await addForm({\n        variables: {\n          userId: userData._id,\n          form: {\n            formName: SECTION,\n            checkboxes: [\n              { checkboxName: \"applyOnline\", status: state.applyOnline },\n              {\n                checkboxName: \"loanApplication\",\n                status: state.loanApplication,\n              },\n            ],\n            notes: notes,\n          },\n        },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    onChange(SECTION, name, checked);\n  };\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/uploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const { fileName, filePath } = res.data;\n      onChange(SECTION, \"uploadedFile\", { fileName, filePath });\n    } catch (err) {\n      if (err.response.status === 5000) {\n        console.log(\"Problem with server\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sheet\">\n      <form onSubmit={handleSubmit}>\n        {/* toggle button */}\n        <div className=\"switcher\">\n          <div className=\"switch-button\">\n            <input\n              className=\"switch-button-checkbox\"\n              type=\"checkbox\"\n              checked={state.loanApplication && state.applyOnline}\n              onChange={(e) => {}}\n            ></input>\n            <label className=\"switch-button-label\">\n              <span className=\"switch-button-label-span\">In Progress</span>\n            </label>\n          </div>\n        </div>\n\n        {/* description */}\n\n        <h2>Mortgage in Principle</h2>\n        <div className=\"description\">\n          <p>\n            To get a mortgage in principle you need to apply online. First use a\n            comparison website to find a good rate or speak to a mortgage\n            advisor who can help you find one. Once you have chosen your lender\n            and product you need to apply online with your income and\n            expenditure information. You will also be asked to provide the\n            details of the mortgage amount you are looking for and your deposit\n            amount. After submitting you are usually given an answer within a\n            couple of minutes. If accepted you have a mortgage in principle\n            offer. When you apply for your actual mortgage you need to keep the\n            details of your principle offer. It's also handy to let the estate\n            agent know you have this.\n          </p>\n        </div>\n        <div className=\"checkbox\">\n          <ul>\n            <li>\n              <input\n                className=\"item\"\n                name=\"applyOnline\"\n                type=\"checkbox\"\n                checked={state.applyOnline}\n                onChange={handleCheckboxChange}\n              />\n\n              <span>Apply online </span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"loanApplication\"\n                type=\"checkbox\"\n                checked={state.loanApplication}\n                onChange={handleCheckboxChange}\n              />\n              <span>Mortgage Loan Application </span>\n            </li>\n          </ul>\n        </div>\n\n        <div>\n          <button\n            onClick={() => setStep(2)}\n            type=\"button\"\n            className=\" button2 item btn-next\"\n          >\n            Next\n          </button>\n        </div>\n        <div>\n          <label>Leave a note:</label> <br />\n          <textarea\n            value={state.note || \"\"}\n            name=\"note\"\n            className=\"note\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <button type=\"button\" className=\"button1 btn-save\" onClick={handleSave}>\n          Save\n        </button>\n        <div>\n          <h3>User comments:</h3>\n          <ul>\n            {state.noteList.map((note) => (\n              <li>{note}</li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h4>File Upload</h4>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              {filename}\n            </label>\n          </div>\n        </div>\n        <input\n          onClick={handleUpload}\n          value=\"Upload\"\n          className=\"btn btn-primary mt-4\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Save Page\"\n          className=\"btn btn-primary mt-4\"\n        />\n      </form>\n      {state.uploadedFile ? (\n        <div className=\"row mt-4\">\n          <a href=\"'/client/src/assets/${file.name}`\" target=\"_blank\">\n            <h5 name=\"file\">{state.uploadedFile?.fileName}</h5>\n          </a>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\LegalSearchForm.js",["130"],"import React, { useContext, useState } from \"react\";\nimport { multiStepContext } from \"../../StepContext\";\nimport axios from \"axios\";\n\nconst SECTION = \"legalSearchForm\";\n\nexport default function LegalSearchForm({ state, onChange, onAddNote }) {\n  const { setStep } = useContext(multiStepContext);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n\n  const handleSave = (e) => {\n    onAddNote(SECTION, \"noteList\", state.note);\n    onChange(SECTION, \"note\", \"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    onChange(SECTION, name, value);\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    onChange(SECTION, name, checked);\n  };\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/uploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const { fileName, filePath } = res.data;\n      onChange(SECTION, \"uploadedFile\",{ fileName, filePath });\n    } catch (err) {\n      if (err.response.status === 5000) {\n        console.log(\"Problem with server\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sheet\">\n      <form>\n        {/* toggle button */}\n        <div className=\"switcher\">\n          <div className=\"switch-button\">\n            <input\n              className=\"switch-button-checkbox\"\n              type=\"checkbox\"\n              checked={\n                state.solicitorHired &&\n                state.searchesStarted &&\n                state.searchesCompleted\n              }\n              onChange={(e) => {}}\n            ></input>\n            <label className=\"switch-button-label\">\n              <span className=\"switch-button-label-span\">In Progress</span>\n            </label>\n          </div>\n        </div>\n\n        {/* description */}\n\n        <h2>Legal Searches</h2>\n        <div className=\"description\">\n          <p>\n    Now you have your mortgage confirmed you need to hire a conveyancing Solicitor.\n    A solicitor or conveyancer will handle all the legal aspects of buying or selling a \n    property for you. A good one will keep you updated regularly, and can support \n    you by answering questions about the process of buying a property. Depending on the property \n    type what they do can vary but the the most common role is under-taking the searches required\n    when purchasing a property. They include:\n    <ul>\n      <li>\n      Local authority searches\n\n      </li>\n\n      <li>\n      Land Registry searches.\n      </li>\n      <li>\n      Environmental searches. \n      </li>\n      <li>\n      Water authority searches.\n      </li>\n      <li>\n      Location specific searches.\n      </li>\n      <li>\n      Chancel repair search.\n      </li>\n\n    </ul>\n          Your lender may have some conveyancers that they recommend to use but its always a good idea to look around\n           to see what is available. Speak to friends and family who may have some recommendations.\n          </p>\n        </div>\n        <div className=\"checkbox\">\n          <ul>\n            <li>\n              <input\n                className=\"item\"\n                name=\"solicitorHired\"\n                type=\"checkbox\"\n                checked={state.solicitorHired}\n                onChange={handleCheckboxChange}\n              />\n\n              <span>Solicitor Hired </span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"searchesStarted\"\n                type=\"checkbox\"\n                checked={state.searchesStarted}\n                onChange={handleCheckboxChange}\n              />\n              <span>Searches Started</span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"searchesCompleted\"\n                type=\"checkbox\"\n                checked={state.searchesCompleted}\n                onChange={handleCheckboxChange}\n              />\n              <span>Searches Completed </span>\n            </li>\n          </ul>\n\n    \n        </div>\n\n        <div>\n          <button\n            onClick={() => setStep(3)}\n            type=\"button\"\n            className=\" button2 item btn-back\"\n          >\n            Back\n          </button>\n          <button\n            onClick={() => setStep(5)}\n            type=\"button\"\n            className=\" button2 item btn-next\"\n          >\n            Next\n          </button>\n        </div>\n        <div>\n          <label>Leave a note:</label> <br />\n          <textarea\n            value={state.note || \"\"}\n            name=\"note\"\n            className=\"note\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <button type=\"button\" className=\"button1 btn-save\" onClick={handleSave}>\n          Save\n        </button>\n        <div>\n          <h3>User comments:</h3>\n          <ul>\n            {state.noteList.map((note) => (\n              <li>{note}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div>\n          <h4>File Upload</h4>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              {filename}\n            </label>\n          </div>\n        </div>\n        <input onClick={handleUpload} value=\"Upload\" className=\"btn btn-primary mt-4\" />\n      </form>\n      {state.uploadedFile ? (\n        <div className=\"row mt-4\">\n         <a href=\"`/client/src/assets/${file.name}`\" target=\"_blank\">\n         <h5\n           name=\"file\"\n          >\n           {state.uploadedFile?.fileName}</h5>\n         </a>\n         \n        </div>\n      ) : null}\n    </div>\n  );\n}\n","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\PropertyAcceptedForm.js",["131"],"import React, { useContext, useState } from \"react\";\nimport { multiStepContext } from \"../../StepContext\";\nimport axios from \"axios\";\n\nconst SECTION = \"propertyAcceptedForm\";\n\nexport default function PropertyAcceptedForm({ state, onChange, onAddNote }) {\n  const { setStep } = useContext(multiStepContext);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n  //const [uploadedFile, setUploadedFile] = useState({});\n\n  const handleSave = (e) => {\n    onAddNote(SECTION, \"noteList\", state.note);\n    onChange(SECTION, \"note\", \"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    onChange(SECTION, name, value);\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    onChange(SECTION, name, checked);\n  };\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/uploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const { fileName, filePath } = res.data;\n      onChange(SECTION, \"uploadedFile\",{ fileName, filePath });\n    } catch (err) {\n      if (err.response.status === 5000) {\n        console.log(\"Problem with server\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sheet\">\n      <form>\n        {/* toggle button */}\n        <div className=\"switcher\">\n          <div className=\"switch-button\">\n            <input\n              className=\"switch-button-checkbox\"\n              type=\"checkbox\"\n              checked={state.offerMade && state.offerAccepted}\n              onChange={(e) => {}}\n            ></input>\n            <label className=\"switch-button-label\">\n              <span className=\"switch-button-label-span\">In Progress</span>\n            </label>\n          </div>\n        </div>\n\n        {/* description */}\n\n        <h2>Property offer Accepted</h2>\n        <div className=\"description\">\n          <p>\n            After getting your mortgage in principle offer and with a good idea of what you can afford you can now start\n            to book viewings at properties you like. According to an article by What Mortgage from February 2017, the majority \n            of home buyers view six or more properties before they make the decision to commit to buying one. A lot of properties \n            which are expecting multiple bidders have a minimum price known as 'Offers over'. If there are multiple bidders then\n            the seller can do a 'best and final'. This means you have to submit to the estate agent your final offer and the seller \n            will choose the bid they prefer. \n            Properties can also be listed for an exact amount, in this case its usually a good idea to start the negotiation\n            at a lower price. Negotiation is an art and you should research this before making any bids.\n          \n          </p>\n        </div>\n        <div className=\"checkbox\">\n          <ul>\n            <li>\n              <input\n                className=\"item\"\n                name=\"offerMade\"\n                type=\"checkbox\"\n                checked={state.offerMade}\n                onChange={handleCheckboxChange}\n              />\n\n              <span>Offer Made </span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"offerAccepted\"\n                type=\"checkbox\"\n                checked={state.offerAccepted}\n                onChange={handleCheckboxChange}\n              />\n              <span>Offer Accepted </span>\n            </li>\n          </ul>\n\n         \n        </div>\n        <div>\n          <button\n            onClick={() => setStep(1)}\n            type=\"button\"\n            className=\" button2 item btn-back\"\n          >\n            Back\n          </button>\n          <button\n            onClick={() => setStep(3)}\n            type=\"button\"\n            className=\" button2 item btn-next\"\n          >\n            Next\n          </button>\n        </div>\n        <div>\n          <label>Leave a note:</label> <br />\n          <textarea\n            value={state.note || \"\"}\n            name=\"note\"\n            className=\"note\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <button type=\"button\" className=\"button1 btn-save\" onClick={handleSave}>\n          Save\n        </button>\n        <div>\n          <h3>User comments:</h3>\n          <ul>\n            {state.noteList.map((note) => (\n              <li>{note}</li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h4>File Upload</h4>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              {filename}\n            </label>\n          </div>\n        </div>\n        <input onClick={handleUpload} value=\"Upload\" className=\"btn btn-primary mt-4\" />\n      </form>\n      {state.uploadedFile ? (\n        <div className=\"row mt-4\">\n         <a href=\"`/client/src/assets/${file.name}`\" target=\"_blank\">\n         <h5\n           name=\"file\"\n           >\n           {state.uploadedFile?.fileName}</h5>\n         </a>\n         \n        </div>\n      ) : null}\n    \n    </div>\n  );\n}\n","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\SurveyForm.js",["132"],"import React, { useContext, useState } from \"react\";\nimport { multiStepContext } from \"../../StepContext\";\nimport axios from \"axios\";\n\nconst SECTION = \"surveyForm\";\n\nexport default function MortgageOfferForm({ state, onChange, onAddNote }) {\n  const { setStep } = useContext(multiStepContext);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n\n  const handleSave = (e) => {\n    onAddNote(SECTION, \"noteList\", state.note);\n    onChange(SECTION, \"note\", \"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    onChange(SECTION, name, value);\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    onChange(SECTION, name, checked);\n  };\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/uploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const { fileName, filePath } = res.data;\n      onChange(SECTION, \"uploadedFile\",{ fileName, filePath });\n    } catch (err) {\n      if (err.response.status === 5000) {\n        console.log(\"Problem with server\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sheet\">\n      <form>\n        {/* toggle button */}\n        <div className=\"switcher\">\n          <div className=\"switch-button\">\n            <input\n              className=\"switch-button-checkbox\"\n              type=\"checkbox\"\n              checked={\n                state.surveyTypeDecided &&\n                state.surveyCompleted &&\n                state.queriesResolved\n              }\n              onChange={(e) => {}}\n            ></input>\n            <label className=\"switch-button-label\">\n              <span className=\"switch-button-label-span\">In Progress</span>\n            </label>\n          </div>\n        </div>\n\n        {/* description */}\n\n        <h2>Survey</h2>\n        <div className=\"description\">\n          <p>\n          A house survey is an inspection of a property’s condition conducted by experts. \n          The experts – surveyors – inspect the property and tell you if there are any \n          issues to do with the condition of the property from minor to significant structural \n          problems. They will highlight what repairs or alterations are needed, whether it’s \n          addressing a damp patch or replacing a whole roof. The report from the surveyor also \n          provides expert commentary on the property, from the type of walls to the type of glazing.\n          There are three types of surveys which you can choose from:\n          <ul>\n      <li>\n      RICS Home Survey – Level 1\nThe RICS Home Survey Level 1 is the most basic – and cheapest – \nsurvey. It is suitable if you’re buying a conventional property built \nfrom common building materials and in reasonable condition. It was previously called a Condition Report.\n\nThe Level 1 survey provides a ‘traffic light’ rating of the condition \nof different parts of the building, services, and the grounds, showing problems \nthat may require varying degrees of attention and an assessment of the relative \nimportance of the problems. It also includes a summary of risks to the building, \npeople and grounds. But the report doesn’t go into much detail and doesn’t include \nany advice nor a valuation.\n      </li>\n      <li>\n      RICS Home Survey – Level 2\nPreviously called a Home Buyer Report, this mid-level survey is a popular choice for \nmost people buying a conventional property in reasonable condition. It covers everything you’d \nget in a RICS Home Survey Level 1, plus they check roof spaces and cellars. \n\nYou’ll also get recommendations for further investigations where the property surveyor is\n unable to reach a conclusion with reasonable confidence. The report will also give advice \n on budget for any repairs and on the amount of ongoing maintenance required in the future\n\nRICS Home Survey Level 2 are offered with or without a valuation. If you opt for a Home \nSurvey Level 2 with Valuation, it will also include a market value, an insurance reinstatement \nfigure and a list of problems that the property surveyor considers may affect the value of the property.\n      </li>\n      <li>\n      RICS Home Survey – Level 3\nThe RICS Home Survey Level 3, also known as a full structural survey and previously as a RICS Building Survey, \nis the most thorough survey offered by RICS.\n\nIt is a good house survey option if you’re buying a property over 50 years old, of unusual design, is a listed \nbuilding or in poor condition; if you’re planning to undertake renovations or have any concerns about the property. \nAnd while they are more expensive, they are thorough. \n\nThe Level 3 survey will include everything you would get in a RICS Home Survey Level 2, plus it will describe \nthe identifiable risk and causes of potential or hidden defects in areas not inspected. It will outline the likely \nscope of any appropriate remedial work and explain the likely consequences of non-repair. Plus you’ll get recommendations\n in respect of the priority and likely timescale for necessary repairs. \n      </li>\n    </ul>\n\n    Although there is no legal requirement to have a survey it is certainly a good idea considering any unwanted suprises\n    with the property could cost thousands whereas a survey should only cost a few hundred pounds. Once the survey is complete \n    you need to review it and decide if you still want to purchase the property and if you are still willing to pay the same price.\n    It is quite common for some work to be needed like fixing a roof or damp proofing - then it is back to negotiating who \n    will cover the cost for this. The seller is under no obligation to lower the price or fix any work needed but depending \n    on the type of improvements needed its not unusual for them to arrange for the improvements or lower the property price \n    by the amount it would cost. If this happens you will need to update your lender with the new price.\n          </p>\n        </div>\n        <div className=\"checkbox\">\n          <ul>\n            <li>\n              <input\n                className=\"item\"\n                name=\"surveyTypeDecided\"\n                type=\"checkbox\"\n                checked={state.surveyTypeDecided}\n                onChange={handleCheckboxChange}\n              />\n\n              <span>Decide on Survey Type</span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"surveyCompleted\"\n                type=\"checkbox\"\n                checked={state.surveyCompleted}\n                onChange={handleCheckboxChange}\n              />\n              <span>Survey Completed</span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"queriesResolved\"\n                type=\"checkbox\"\n                checked={state.queriesResolved}\n                onChange={handleCheckboxChange}\n              />\n              <span>Queries Resolved</span>\n            </li>\n          </ul>\n\n          \n        </div>\n\n        <div>\n          <button\n            onClick={() => setStep(4)}\n            type=\"button\"\n            className=\" button2 item btn-back\"\n          >\n            Back\n          </button>\n          <button\n            onClick={() => setStep(6)}\n            type=\"button\"\n            className=\" button2 item btn-next\"\n          >\n            Next\n          </button>\n        </div>\n        <div>\n          <label>Leave a note:</label> <br />\n          <textarea\n            value={state.note || \"\"}\n            name=\"note\"\n            className=\"note\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <button type=\"button\" className=\"button1 btn-save\" onClick={handleSave}>\n          Save\n        </button>\n        <div>\n          <h3>User comments:</h3>\n          <ul>\n            {state.noteList.map((note) => (\n              <li>{note}</li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h4>File Upload</h4>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              {filename}\n            </label>\n          </div>\n        </div>\n        <input onClick={handleUpload} value=\"Upload\" className=\"btn btn-primary mt-4\" />\n      </form>\n      {state.uploadedFile ? (\n        <div className=\"row mt-4\">\n         <a href=\"`/client/src/assets/${file.name}`\" target=\"_blank\">\n         <h5\n           name=\"file\"\n          >\n           {state.uploadedFile?.fileName}</h5>\n         </a>\n         \n        </div>\n      ) : null}\n    </div>\n  );\n}\n","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\Roadmap\\ExchangeCompletionForm.js",["133"],"import React, { useContext, useState } from \"react\";\nimport { multiStepContext } from \"../../StepContext\";\nimport axios from \"axios\";\n\nconst SECTION = \"exchangeCompletionForm\";\n\nexport default function ExchangeCompletionForm({ state, onChange, onAddNote }) {\n  const { setStep } = useContext(multiStepContext);\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n\n  const handleSave = (e) => {\n    onAddNote(SECTION, \"noteList\", state.note);\n    onChange(SECTION, \"note\", \"\");\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    onChange(SECTION, name, value);\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    onChange(SECTION, name, checked);\n  };\n\n  const onFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/uploads\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      const { fileName, filePath } = res.data;\n      onChange(SECTION, \"uploadedFile\",{ fileName, filePath });\n    } catch (err) {\n      if (err.response.status === 5000) {\n        console.log(\"Problem with server\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <div className=\"sheet\">\n      <form>\n        {/* toggle button */}\n        <div className=\"switcher\">\n          <div className=\"switch-button\">\n            <input\n              className=\"switch-button-checkbox\"\n              type=\"checkbox\"\n              checked={\n                state.movingDateAgreed &&\n                state.contractSigned &&\n                state.contractExchanged &&\n                state.keyCollected\n              }\n            ></input>\n            <label className=\"switch-button-label\">\n              <span className=\"switch-button-label-span\">In Progress</span>\n            </label>\n          </div>\n        </div>\n\n        {/* description */}\n\n        <h2>Exchange and Completion</h2>\n        <div className=\"description\">\n          <p>\n          Exchange of contracts is the point at which the buyer pays a deposit \n          and the sale/purchase contract becomes legally binding. Completion is \n          when the balance of the payment for the property is passed over to the \n          seller's solicitor and ownership transfers to the buyer. Before this you need\n          to make sure a date has been agreed and you have organised for the keys to be collected.\n          This is usually from the estate agents office. The seller will be given a time which they \n          need to vacate the property by on the day and they will have arranged a moving company to ensure\n          they have left the property by the agreed time.\n          </p>\n        </div>\n        <div className=\"checkbox\">\n          <ul>\n            <li>\n              <input\n                className=\"item\"\n                name=\"movingDateAgreed\"\n                type=\"checkbox\"\n                checked={state.movingDateAgreed}\n                onChange={handleCheckboxChange}\n              />\n\n              <span>Moving Date Agreed</span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"contractSigned\"\n                type=\"checkbox\"\n                checked={state.contractSigned}\n                onChange={handleCheckboxChange}\n              />\n              <span>Contract Signed</span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"contractExchanged\"\n                type=\"checkbox\"\n                checked={state.contractExchanged}\n                onChange={handleCheckboxChange}\n              />\n              <span>Contract Exchanged</span>\n            </li>\n            <li>\n              <input\n                className=\"item\"\n                name=\"keyCollected\"\n                type=\"checkbox\"\n                checked={state.keyCollected}\n                onChange={handleCheckboxChange}\n              />\n              <span>Agree Time to Collect the Key</span>\n            </li>\n          </ul>\n        </div>\n\n        <div>\n          <button\n            onClick={() => setStep(5)}\n            type=\"button\"\n            className=\" button2 item btn-back\"\n          >\n            Back\n          </button>\n        </div>\n        <div>\n          <label>Leave a note:</label> <br />\n          <textarea\n            value={state.note || \"\"}\n            name=\"note\"\n            className=\"note\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n\n        <button type=\"button\" className=\"button1 btn-save\" onClick={handleSave}>\n          Save\n        </button>\n        <div>\n          <h3>User comments:</h3>\n          <ul>\n            {state.noteList.map((note) => (\n              <li>{note}</li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <h4>File Upload</h4>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              {filename}\n            </label>\n          </div>\n        </div>\n        <input onClick={handleUpload} value=\"Upload\" className=\"btn btn-primary mt-4\" />\n      </form>\n      {state.uploadedFile ? (\n        <div className=\"row mt-4\">\n         <a href=\"`/client/src/assets/${file.name}`\" target=\"_blank\">\n         <h5\n           name=\"file\"\n          >\n           {state.uploadedFile?.fileName}</h5>\n         </a>\n         \n        </div>\n      ) : null}\n    </div>\n  );\n}\n","C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\components\\ViewBuyerCard\\index.js",["134"],"C:\\CodingBootcamp\\ProjectRepositoryGithub\\project3-backup\\track-my-move\\client\\src\\pages\\About.js",[],{"ruleId":"135","severity":1,"message":"136","line":49,"column":11,"nodeType":"137","endLine":49,"endColumn":69},{"ruleId":"138","severity":1,"message":"139","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"142","line":2,"column":20,"nodeType":"140","messageId":"141","endLine":2,"endColumn":29},{"ruleId":"138","severity":1,"message":"143","line":2,"column":31,"nodeType":"140","messageId":"141","endLine":2,"endColumn":35},{"ruleId":"144","severity":1,"message":"145","line":37,"column":28,"nodeType":"146","messageId":"147","endLine":37,"endColumn":30},{"ruleId":"144","severity":1,"message":"148","line":48,"column":25,"nodeType":"146","messageId":"147","endLine":48,"endColumn":27},{"ruleId":"138","severity":1,"message":"149","line":32,"column":11,"nodeType":"140","messageId":"141","endLine":32,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":114,"column":5,"nodeType":"152","messageId":"153","endLine":169,"endColumn":6},{"ruleId":"138","severity":1,"message":"149","line":18,"column":11,"nodeType":"140","messageId":"141","endLine":18,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":30,"column":6,"nodeType":"156","endLine":30,"endColumn":25,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":47,"column":5,"nodeType":"156","endLine":47,"endColumn":28,"suggestions":"159"},{"ruleId":"138","severity":1,"message":"160","line":66,"column":15,"nodeType":"140","messageId":"141","endLine":66,"endColumn":19},{"ruleId":"138","severity":1,"message":"143","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":16,"column":7,"nodeType":"137","endLine":16,"endColumn":59},{"ruleId":"161","severity":1,"message":"162","line":181,"column":18,"nodeType":"163","messageId":"164","endLine":181,"endColumn":53},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"138","severity":1,"message":"149","line":20,"column":11,"nodeType":"140","messageId":"141","endLine":20,"endColumn":18},{"ruleId":"138","severity":1,"message":"169","line":29,"column":21,"nodeType":"140","messageId":"141","endLine":29,"endColumn":26},{"ruleId":"138","severity":1,"message":"160","line":63,"column":15,"nodeType":"140","messageId":"141","endLine":63,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":235,"column":19,"nodeType":"163","messageId":"164","endLine":235,"endColumn":54},{"ruleId":"161","severity":1,"message":"162","line":208,"column":18,"nodeType":"163","messageId":"164","endLine":208,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":171,"column":18,"nodeType":"163","messageId":"164","endLine":171,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":234,"column":18,"nodeType":"163","messageId":"164","endLine":234,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":185,"column":18,"nodeType":"163","messageId":"164","endLine":185,"endColumn":53},{"ruleId":"138","severity":1,"message":"170","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'loading' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userProfile'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useCallback has an unnecessary dependency: 'formState'. Either exclude it or remove the dependency array.",["172"],"'data' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-native-reassign",["173"],"no-negated-in-lhs",["174"],"'error' is assigned a value but never used.","'Auth' is defined but never used.",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [userProfile, userProfile?.name]",{"range":"179","text":"180"},"Update the dependencies array to be: [uploadFile]",{"range":"181","text":"182"},[871,890],"[userProfile, userProfile?.name]",[1279,1302],"[uploadFile]"]